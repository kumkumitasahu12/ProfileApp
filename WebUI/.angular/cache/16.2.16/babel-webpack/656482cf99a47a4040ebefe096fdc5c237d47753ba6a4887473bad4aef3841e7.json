{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nexport let WorkExperienceComponent = class WorkExperienceComponent {\n  constructor(fileService) {\n    this.fileService = fileService;\n    this.selectedFile = null;\n    this.uploadedFiles = [];\n    this.workExperiences = [];\n    this.newExperience = {};\n  }\n  ngOnInit() {\n    this.fetchUploadedFiles();\n  }\n  onFileChange(event) {\n    this.selectedFile = event.target.files[0];\n  }\n  uploadFile() {\n    if (this.selectedFile) {\n      this.fileService.uploadFile(this.selectedFile).subscribe(response => {\n        console.log('File uploaded successfully:', response);\n        this.fetchUploadedFiles();\n      }, error => {\n        console.error('Error uploading file:', error);\n      });\n    } else {\n      console.warn('No file selected for upload.');\n    }\n  }\n  fetchUploadedFiles() {\n    this.fileService.getUploadedFiles().subscribe(data => {\n      this.uploadedFiles = data;\n    }, error => {\n      console.error('Error fetching files:', error);\n    });\n  }\n  addWorkExperience() {\n    if (this.newExperience.jobTitle && this.newExperience.companyName) {\n      this.workExperiences.push({\n        ...this.newExperience\n      });\n      this.newExperience = {}; // Reset for the next input\n    } else {\n      alert('Please fill in job title and company name.');\n    }\n  }\n};\nWorkExperienceComponent = __decorate([Component({\n  selector: 'app-work-experience',\n  templateUrl: './work-experience.component.html',\n  styleUrls: ['./work-experience.component.css']\n})], WorkExperienceComponent);","map":{"version":3,"names":["Component","WorkExperienceComponent","constructor","fileService","selectedFile","uploadedFiles","workExperiences","newExperience","ngOnInit","fetchUploadedFiles","onFileChange","event","target","files","uploadFile","subscribe","response","console","log","error","warn","getUploadedFiles","data","addWorkExperience","jobTitle","companyName","push","alert","__decorate","selector","templateUrl","styleUrls"],"sources":["C:\\MyProfile\\WebUI\\WebUI\\src\\app\\work-experience\\work-experience.component.ts"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\r\nimport { FileService } from '../file.service';\r\n\r\n@Component({\r\n  selector: 'app-work-experience',\r\n  templateUrl: './work-experience.component.html',\r\n  styleUrls: ['./work-experience.component.css']\r\n})\r\nexport class WorkExperienceComponent implements OnInit {\r\n  selectedFile: File | null = null;\r\n  uploadedFiles: any[] = [];\r\n  workExperiences: any[] = [];\r\n  newExperience: any = {};\r\n\r\n  constructor(private fileService: FileService) { }\r\n\r\n  ngOnInit(): void {\r\n    this.fetchUploadedFiles();\r\n  }\r\n\r\n  onFileChange(event: any): void {\r\n    this.selectedFile = event.target.files[0];\r\n  }\r\n\r\n  uploadFile(): void {\r\n    if (this.selectedFile) {\r\n      this.fileService.uploadFile(this.selectedFile).subscribe(\r\n        response => {\r\n          console.log('File uploaded successfully:', response);\r\n          this.fetchUploadedFiles();\r\n        },\r\n        error => {\r\n          console.error('Error uploading file:', error);\r\n        }\r\n      );\r\n    } else {\r\n      console.warn('No file selected for upload.');\r\n    }\r\n  }\r\n\r\n  fetchUploadedFiles(): void {\r\n    this.fileService.getUploadedFiles().subscribe(\r\n      data => {\r\n        this.uploadedFiles = data;\r\n      },\r\n      error => {\r\n        console.error('Error fetching files:', error);\r\n      }\r\n    );\r\n  }\r\n\r\n  addWorkExperience(): void {\r\n    if (this.newExperience.jobTitle && this.newExperience.companyName) {\r\n      this.workExperiences.push({ ...this.newExperience });\r\n      this.newExperience = {}; // Reset for the next input\r\n    } else {\r\n      alert('Please fill in job title and company name.');\r\n    }\r\n  }\r\n}\r\n"],"mappings":";AAAA,SAASA,SAAS,QAAgB,eAAe;AAQ1C,WAAMC,uBAAuB,GAA7B,MAAMA,uBAAuB;EAMlCC,YAAoBC,WAAwB;IAAxB,KAAAA,WAAW,GAAXA,WAAW;IAL/B,KAAAC,YAAY,GAAgB,IAAI;IAChC,KAAAC,aAAa,GAAU,EAAE;IACzB,KAAAC,eAAe,GAAU,EAAE;IAC3B,KAAAC,aAAa,GAAQ,EAAE;EAEyB;EAEhDC,QAAQA,CAAA;IACN,IAAI,CAACC,kBAAkB,EAAE;EAC3B;EAEAC,YAAYA,CAACC,KAAU;IACrB,IAAI,CAACP,YAAY,GAAGO,KAAK,CAACC,MAAM,CAACC,KAAK,CAAC,CAAC,CAAC;EAC3C;EAEAC,UAAUA,CAAA;IACR,IAAI,IAAI,CAACV,YAAY,EAAE;MACrB,IAAI,CAACD,WAAW,CAACW,UAAU,CAAC,IAAI,CAACV,YAAY,CAAC,CAACW,SAAS,CACtDC,QAAQ,IAAG;QACTC,OAAO,CAACC,GAAG,CAAC,6BAA6B,EAAEF,QAAQ,CAAC;QACpD,IAAI,CAACP,kBAAkB,EAAE;MAC3B,CAAC,EACDU,KAAK,IAAG;QACNF,OAAO,CAACE,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;MAC/C,CAAC,CACF;KACF,MAAM;MACLF,OAAO,CAACG,IAAI,CAAC,8BAA8B,CAAC;;EAEhD;EAEAX,kBAAkBA,CAAA;IAChB,IAAI,CAACN,WAAW,CAACkB,gBAAgB,EAAE,CAACN,SAAS,CAC3CO,IAAI,IAAG;MACL,IAAI,CAACjB,aAAa,GAAGiB,IAAI;IAC3B,CAAC,EACDH,KAAK,IAAG;MACNF,OAAO,CAACE,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;IAC/C,CAAC,CACF;EACH;EAEAI,iBAAiBA,CAAA;IACf,IAAI,IAAI,CAAChB,aAAa,CAACiB,QAAQ,IAAI,IAAI,CAACjB,aAAa,CAACkB,WAAW,EAAE;MACjE,IAAI,CAACnB,eAAe,CAACoB,IAAI,CAAC;QAAE,GAAG,IAAI,CAACnB;MAAa,CAAE,CAAC;MACpD,IAAI,CAACA,aAAa,GAAG,EAAE,CAAC,CAAC;KAC1B,MAAM;MACLoB,KAAK,CAAC,4CAA4C,CAAC;;EAEvD;CACD;AAnDY1B,uBAAuB,GAAA2B,UAAA,EALnC5B,SAAS,CAAC;EACT6B,QAAQ,EAAE,qBAAqB;EAC/BC,WAAW,EAAE,kCAAkC;EAC/CC,SAAS,EAAE,CAAC,iCAAiC;CAC9C,CAAC,C,EACW9B,uBAAuB,CAmDnC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}