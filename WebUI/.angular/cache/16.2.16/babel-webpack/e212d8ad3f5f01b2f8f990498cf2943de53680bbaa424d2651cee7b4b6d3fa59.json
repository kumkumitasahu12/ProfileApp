{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"../_services/account.service\";\nimport * as i4 from \"@angular/common\";\nfunction LoginComponent_div_9_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\")(1, \"small\", 12);\n    i0.ɵɵtext(2, \"Username is required.\");\n    i0.ɵɵelementEnd()();\n  }\n}\nfunction LoginComponent_div_14_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\")(1, \"small\", 12);\n    i0.ɵɵtext(2, \"Password is required.\");\n    i0.ɵɵelementEnd()();\n  }\n}\nexport let LoginComponent = /*#__PURE__*/(() => {\n  class LoginComponent {\n    constructor(fb, router, accountService) {\n      this.fb = fb;\n      this.router = router;\n      this.accountService = accountService;\n      this.email = '';\n      this.password = '';\n      this.loginForm = this.fb.group({\n        email: ['', Validators.required],\n        password: ['', Validators.required]\n      });\n    }\n    onSubmit() {\n      if (this.loginForm.valid) {\n        const {\n          email,\n          password\n        } = this.loginForm.value;\n        this.accountService.login(email, password).subscribe(data => {\n          this.router.navigate(['/profile']);\n        }, error => {\n          console.error('Login failed', error);\n        });\n      }\n    }\n    static {\n      this.ɵfac = function LoginComponent_Factory(t) {\n        return new (t || LoginComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.Router), i0.ɵɵdirectiveInject(i3.AccountService));\n      };\n    }\n    static {\n      this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n        type: LoginComponent,\n        selectors: [[\"app-login\"]],\n        decls: 20,\n        vars: 6,\n        consts: [[1, \"background-image\"], [1, \"login-container\"], [3, \"formGroup\", \"ngSubmit\"], [1, \"form-group\"], [\"for\", \"username\"], [\"id\", \"username\", \"formControlName\", \"email\", 3, \"ngModel\", \"ngModelChange\"], [4, \"ngIf\"], [\"for\", \"password\"], [\"type\", \"password\", \"id\", \"password\", \"formControlName\", \"password\", 3, \"ngModel\", \"ngModelChange\"], [\"type\", \"submit\", 3, \"disabled\"], [1, \"link-container\"], [\"routerLink\", \"/register\"], [1, \"error-message\"]],\n        template: function LoginComponent_Template(rf, ctx) {\n          if (rf & 1) {\n            i0.ɵɵelement(0, \"div\", 0);\n            i0.ɵɵelementStart(1, \"div\", 1)(2, \"h2\");\n            i0.ɵɵtext(3, \"Login\");\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(4, \"form\", 2);\n            i0.ɵɵlistener(\"ngSubmit\", function LoginComponent_Template_form_ngSubmit_4_listener() {\n              return ctx.onSubmit();\n            });\n            i0.ɵɵelementStart(5, \"div\", 3)(6, \"label\", 4);\n            i0.ɵɵtext(7, \"Username:\");\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(8, \"input\", 5);\n            i0.ɵɵlistener(\"ngModelChange\", function LoginComponent_Template_input_ngModelChange_8_listener($event) {\n              return ctx.email = $event;\n            });\n            i0.ɵɵelementEnd();\n            i0.ɵɵtemplate(9, LoginComponent_div_9_Template, 3, 0, \"div\", 6);\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(10, \"div\", 3)(11, \"label\", 7);\n            i0.ɵɵtext(12, \"Password:\");\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(13, \"input\", 8);\n            i0.ɵɵlistener(\"ngModelChange\", function LoginComponent_Template_input_ngModelChange_13_listener($event) {\n              return ctx.password = $event;\n            });\n            i0.ɵɵelementEnd();\n            i0.ɵɵtemplate(14, LoginComponent_div_14_Template, 3, 0, \"div\", 6);\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(15, \"button\", 9);\n            i0.ɵɵtext(16, \"Login\");\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(17, \"div\", 10)(18, \"a\", 11);\n            i0.ɵɵtext(19, \"Don't have an account yet? Register Now\");\n            i0.ɵɵelementEnd()()()();\n          }\n          if (rf & 2) {\n            let tmp_2_0;\n            let tmp_4_0;\n            i0.ɵɵadvance(4);\n            i0.ɵɵproperty(\"formGroup\", ctx.loginForm);\n            i0.ɵɵadvance(4);\n            i0.ɵɵproperty(\"ngModel\", ctx.email);\n            i0.ɵɵadvance(1);\n            i0.ɵɵproperty(\"ngIf\", ((tmp_2_0 = ctx.loginForm.get(\"email\")) == null ? null : tmp_2_0.invalid) && (((tmp_2_0 = ctx.loginForm.get(\"email\")) == null ? null : tmp_2_0.touched) || ((tmp_2_0 = ctx.loginForm.get(\"email\")) == null ? null : tmp_2_0.dirty)));\n            i0.ɵɵadvance(4);\n            i0.ɵɵproperty(\"ngModel\", ctx.password);\n            i0.ɵɵadvance(1);\n            i0.ɵɵproperty(\"ngIf\", ((tmp_4_0 = ctx.loginForm.get(\"password\")) == null ? null : tmp_4_0.invalid) && (((tmp_4_0 = ctx.loginForm.get(\"password\")) == null ? null : tmp_4_0.touched) || ((tmp_4_0 = ctx.loginForm.get(\"password\")) == null ? null : tmp_4_0.dirty)));\n            i0.ɵɵadvance(1);\n            i0.ɵɵproperty(\"disabled\", ctx.loginForm.invalid);\n          }\n        },\n        dependencies: [i4.NgIf, i2.RouterLink, i1.ɵNgNoValidate, i1.DefaultValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.FormGroupDirective, i1.FormControlName],\n        styles: [\"body[_ngcontent-%COMP%], html[_ngcontent-%COMP%]{height:100%;margin:0;display:flex;justify-content:center;align-items:center;font-family:Arial,sans-serif}.background-image[_ngcontent-%COMP%]{position:fixed;top:0;left:0;width:100%;height:100%;background-image:url(/assets/images/HomePage.jpg);background-size:cover;background-position:center;filter:blur(8px);z-index:-1}.login-container[_ngcontent-%COMP%]{position:relative;background-color:#ffffffe6;padding:30px;border-radius:8px;max-width:400px;width:100%;box-shadow:0 4px 15px #0000004d;-webkit-backdrop-filter:blur(10px);backdrop-filter:blur(10px);box-sizing:border-box;margin:auto}.form-group[_ngcontent-%COMP%]{margin-bottom:20px}label[_ngcontent-%COMP%]{display:block;margin-bottom:5px;font-weight:700}input[_ngcontent-%COMP%]{width:100%;padding:12px;border:1px solid #ccc;border-radius:4px;box-shadow:inset 0 2px 4px #0000001a;transition:border-color .3s;box-sizing:border-box}input[_ngcontent-%COMP%]:focus{border-color:#007bff;outline:none}.error-message[_ngcontent-%COMP%]{color:red;font-size:.875em}button[_ngcontent-%COMP%]{width:100%;padding:12px;background-color:#007bff;color:#fff;border:none;border-radius:4px;cursor:pointer;transition:background-color .3s;font-size:1em}button[_ngcontent-%COMP%]:hover{background-color:#0056b3}.link-container[_ngcontent-%COMP%]{text-align:center}.link-container[_ngcontent-%COMP%]   a[_ngcontent-%COMP%]{color:#007bff;text-decoration:none;font-size:.9em}.link-container[_ngcontent-%COMP%]   a[_ngcontent-%COMP%]:hover{text-decoration:underline}\"]\n      });\n    }\n  }\n  return LoginComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}