{"ast":null,"code":"import { HttpHeaders } from '@angular/common/http';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class ProfileService {\n  constructor(http) {\n    this.http = http;\n    this.apiUrl = 'https://localhost:7266/api/Profile';\n  }\n  getProfile(email) {\n    const token = localStorage.getItem('token'); // or wherever you store your token\n    const headers = new HttpHeaders().set('Authorization', `Bearer ${token}`);\n    return this.http.get(`${this.apiUrl}/profile?email=${email}`, {\n      headers\n    });\n  }\n  login(email, password) {\n    const body = {\n      email,\n      password\n    };\n    return this.http.post(`${this.apiUrl}/login`, body);\n  }\n  static {\n    this.ɵfac = function ProfileService_Factory(t) {\n      return new (t || ProfileService)(i0.ɵɵinject(i1.HttpClient));\n    };\n  }\n  static {\n    this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n      token: ProfileService,\n      factory: ProfileService.ɵfac,\n      providedIn: 'root'\n    });\n  }\n}","map":{"version":3,"names":["HttpHeaders","ProfileService","constructor","http","apiUrl","getProfile","email","token","localStorage","getItem","headers","set","get","login","password","body","post","i0","ɵɵinject","i1","HttpClient","factory","ɵfac","providedIn"],"sources":["C:\\MyProfile\\WebUI\\WebUI\\src\\app\\profile.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class ProfileService {\n  private apiUrl = 'https://localhost:7266/api/Profile';\n\n  constructor(private http: HttpClient) { }\n\n  getProfile(email: string): Observable<any> {\n    const token = localStorage.getItem('token'); // or wherever you store your token\n    const headers = new HttpHeaders().set('Authorization', `Bearer ${token}`);\n\n    return this.http.get(`${this.apiUrl}/profile?email=${email}`, { headers });\n  }\n\n  login(email: string, password: string): Observable<any> {\n    const body = { email, password }; \n    return this.http.post(`${this.apiUrl}/login`, body); \n  }\n}\n"],"mappings":"AACA,SAAqBA,WAAW,QAAQ,sBAAsB;;;AAM9D,OAAM,MAAOC,cAAc;EAGzBC,YAAoBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;IAFhB,KAAAC,MAAM,GAAG,oCAAoC;EAEb;EAExCC,UAAUA,CAACC,KAAa;IACtB,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC,CAAC,CAAC;IAC7C,MAAMC,OAAO,GAAG,IAAIV,WAAW,EAAE,CAACW,GAAG,CAAC,eAAe,EAAE,UAAUJ,KAAK,EAAE,CAAC;IAEzE,OAAO,IAAI,CAACJ,IAAI,CAACS,GAAG,CAAC,GAAG,IAAI,CAACR,MAAM,kBAAkBE,KAAK,EAAE,EAAE;MAAEI;IAAO,CAAE,CAAC;EAC5E;EAEAG,KAAKA,CAACP,KAAa,EAAEQ,QAAgB;IACnC,MAAMC,IAAI,GAAG;MAAET,KAAK;MAAEQ;IAAQ,CAAE;IAChC,OAAO,IAAI,CAACX,IAAI,CAACa,IAAI,CAAC,GAAG,IAAI,CAACZ,MAAM,QAAQ,EAAEW,IAAI,CAAC;EACrD;;;uBAfWd,cAAc,EAAAgB,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;IAAA;EAAA;;;aAAdnB,cAAc;MAAAoB,OAAA,EAAdpB,cAAc,CAAAqB,IAAA;MAAAC,UAAA,EAFb;IAAM;EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}