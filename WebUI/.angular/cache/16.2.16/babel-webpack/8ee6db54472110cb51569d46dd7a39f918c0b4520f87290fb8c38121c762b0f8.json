{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nimport { Validators } from '@angular/forms';\nexport let LoginComponent = class LoginComponent {\n  constructor(fb, router, profileService) {\n    this.fb = fb;\n    this.router = router;\n    this.profileService = profileService;\n    this.email = '';\n    this.password = '';\n    this.loginForm = this.fb.group({\n      email: ['', Validators.required],\n      password: ['', Validators.required]\n    });\n  }\n  onSubmit() {\n    if (this.loginForm.valid) {\n      const {\n        email,\n        password\n      } = this.loginForm.value;\n      this.profileService.login(email, password).subscribe(data => {\n        console.log('Login successful, token:', data.token);\n        localStorage.setItem('token', data.token);\n        this.router.navigate(['/profile']);\n      }, error => {\n        console.error('Login failed', error);\n      });\n    }\n  }\n};\nLoginComponent = __decorate([Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})], LoginComponent);","map":{"version":3,"names":["Component","Validators","LoginComponent","constructor","fb","router","profileService","email","password","loginForm","group","required","onSubmit","valid","value","login","subscribe","data","console","log","token","localStorage","setItem","navigate","error","__decorate","selector","templateUrl","styleUrls"],"sources":["C:\\MyProfile\\WebUI\\WebUI\\src\\app\\login\\login.component.ts"],"sourcesContent":["import { Component } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { Router } from '@angular/router';\r\nimport { ProfileService } from '../../profile.service';\r\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent {\n  loginForm: FormGroup;\n  email: string = '';\n  password: string = '';\n  constructor(private fb: FormBuilder, private router: Router, private profileService: ProfileService) {\n    this.loginForm = this.fb.group({\n      email: ['', Validators.required],\n      password: ['', Validators.required]\n    });\n  }\n\n  onSubmit():void {\n    if (this.loginForm.valid) {\r\n      const { email, password } = this.loginForm.value;\n\n      this.profileService.login(email, password).subscribe(\n        (data) => {\n          console.log('Login successful, token:', data.token);\n          localStorage.setItem('token', data.token);\n          this.router.navigate(['/profile']);\n        },\n        (error) => {\n          console.error('Login failed', error);\n        }\n      );\n    }\n  }\n}\n"],"mappings":";AAAA,SAASA,SAAS,QAAQ,eAAe;AACzC,SAAiCC,UAAU,QAAQ,gBAAgB;AAS5D,WAAMC,cAAc,GAApB,MAAMA,cAAc;EAIzBC,YAAoBC,EAAe,EAAUC,MAAc,EAAUC,cAA8B;IAA/E,KAAAF,EAAE,GAAFA,EAAE;IAAuB,KAAAC,MAAM,GAANA,MAAM;IAAkB,KAAAC,cAAc,GAAdA,cAAc;IAFnF,KAAAC,KAAK,GAAW,EAAE;IAClB,KAAAC,QAAQ,GAAW,EAAE;IAEnB,IAAI,CAACC,SAAS,GAAG,IAAI,CAACL,EAAE,CAACM,KAAK,CAAC;MAC7BH,KAAK,EAAE,CAAC,EAAE,EAAEN,UAAU,CAACU,QAAQ,CAAC;MAChCH,QAAQ,EAAE,CAAC,EAAE,EAAEP,UAAU,CAACU,QAAQ;KACnC,CAAC;EACJ;EAEAC,QAAQA,CAAA;IACN,IAAI,IAAI,CAACH,SAAS,CAACI,KAAK,EAAE;MACxB,MAAM;QAAEN,KAAK;QAAEC;MAAQ,CAAE,GAAG,IAAI,CAACC,SAAS,CAACK,KAAK;MAEhD,IAAI,CAACR,cAAc,CAACS,KAAK,CAACR,KAAK,EAAEC,QAAQ,CAAC,CAACQ,SAAS,CACjDC,IAAI,IAAI;QACPC,OAAO,CAACC,GAAG,CAAC,0BAA0B,EAAEF,IAAI,CAACG,KAAK,CAAC;QACnDC,YAAY,CAACC,OAAO,CAAC,OAAO,EAAEL,IAAI,CAACG,KAAK,CAAC;QACzC,IAAI,CAACf,MAAM,CAACkB,QAAQ,CAAC,CAAC,UAAU,CAAC,CAAC;MACpC,CAAC,EACAC,KAAK,IAAI;QACRN,OAAO,CAACM,KAAK,CAAC,cAAc,EAAEA,KAAK,CAAC;MACtC,CAAC,CACF;;EAEL;CACD;AA3BYtB,cAAc,GAAAuB,UAAA,EAL1BzB,SAAS,CAAC;EACT0B,QAAQ,EAAE,WAAW;EACrBC,WAAW,EAAE,wBAAwB;EACrCC,SAAS,EAAE,CAAC,uBAAuB;CACpC,CAAC,C,EACW1B,cAAc,CA2B1B","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}