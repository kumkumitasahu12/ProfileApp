{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class ProfileService {\n  constructor(http) {\n    this.http = http;\n    this.apiUrl = 'https://localhost:7266/api/Profile';\n  }\n  getProfile() {\n    return this.http.get(`${this.apiUrl}/profile`);\n  }\n  getWorkExperiences() {\n    return this.http.get(`${this.apiUrl}/work-experiences`);\n  }\n  addWorkExperience(workExperience) {\n    return this.http.post(`${this.apiUrl}/add-work-experience`, workExperience); // Update endpoint as necessary\n  }\n\n  login(email, password) {\n    const body = {\n      email,\n      password\n    };\n    return this.http.post(`${this.apiUrl}/login`, body);\n  }\n  importWorkExperience(file) {\n    const formData = new FormData();\n    formData.append('file', file);\n    return this.http.post(`${this.apiUrl}/import-work-experience`, formData);\n  }\n  static {\n    this.ɵfac = function ProfileService_Factory(t) {\n      return new (t || ProfileService)(i0.ɵɵinject(i1.HttpClient));\n    };\n  }\n  static {\n    this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n      token: ProfileService,\n      factory: ProfileService.ɵfac,\n      providedIn: 'root'\n    });\n  }\n}","map":{"version":3,"names":["ProfileService","constructor","http","apiUrl","getProfile","get","getWorkExperiences","addWorkExperience","workExperience","post","login","email","password","body","importWorkExperience","file","formData","FormData","append","i0","ɵɵinject","i1","HttpClient","factory","ɵfac","providedIn"],"sources":["C:\\MyProfile\\WebUI\\WebUI\\src\\app\\profile.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { WorkExperience } from './models/work-experience';\r\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class ProfileService {\n  private apiUrl = 'https://localhost:7266/api/Profile';\n\n  constructor(private http: HttpClient) { }\n\n  getProfile(): Observable<any> {\n    return this.http.get(`${this.apiUrl}/profile`);\n  }\n\n  getWorkExperiences(): Observable<WorkExperience[]> {\n    return this.http.get<WorkExperience[]>(`${this.apiUrl}/work-experiences`);\n  }\n\n  addWorkExperience(workExperience: WorkExperience): Observable<any> {\n    return this.http.post(`${this.apiUrl}/add-work-experience`, workExperience); // Update endpoint as necessary\n  }\n\n  login(email: string, password: string): Observable<any> {\n    const body = { email, password }; \n    return this.http.post(`${this.apiUrl}/login`, body); \n  }\n\n  importWorkExperience(file: File): Observable<any> {\n    const formData = new FormData();\n    formData.append('file', file);\n\n    return this.http.post(`${this.apiUrl}/import-work-experience`, formData);\n  }\n}\n"],"mappings":";;AAQA,OAAM,MAAOA,cAAc;EAGzBC,YAAoBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;IAFhB,KAAAC,MAAM,GAAG,oCAAoC;EAEb;EAExCC,UAAUA,CAAA;IACR,OAAO,IAAI,CAACF,IAAI,CAACG,GAAG,CAAC,GAAG,IAAI,CAACF,MAAM,UAAU,CAAC;EAChD;EAEAG,kBAAkBA,CAAA;IAChB,OAAO,IAAI,CAACJ,IAAI,CAACG,GAAG,CAAmB,GAAG,IAAI,CAACF,MAAM,mBAAmB,CAAC;EAC3E;EAEAI,iBAAiBA,CAACC,cAA8B;IAC9C,OAAO,IAAI,CAACN,IAAI,CAACO,IAAI,CAAC,GAAG,IAAI,CAACN,MAAM,sBAAsB,EAAEK,cAAc,CAAC,CAAC,CAAC;EAC/E;;EAEAE,KAAKA,CAACC,KAAa,EAAEC,QAAgB;IACnC,MAAMC,IAAI,GAAG;MAAEF,KAAK;MAAEC;IAAQ,CAAE;IAChC,OAAO,IAAI,CAACV,IAAI,CAACO,IAAI,CAAC,GAAG,IAAI,CAACN,MAAM,QAAQ,EAAEU,IAAI,CAAC;EACrD;EAEAC,oBAAoBA,CAACC,IAAU;IAC7B,MAAMC,QAAQ,GAAG,IAAIC,QAAQ,EAAE;IAC/BD,QAAQ,CAACE,MAAM,CAAC,MAAM,EAAEH,IAAI,CAAC;IAE7B,OAAO,IAAI,CAACb,IAAI,CAACO,IAAI,CAAC,GAAG,IAAI,CAACN,MAAM,yBAAyB,EAAEa,QAAQ,CAAC;EAC1E;;;uBA3BWhB,cAAc,EAAAmB,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;IAAA;EAAA;;;aAAdtB,cAAc;MAAAuB,OAAA,EAAdvB,cAAc,CAAAwB,IAAA;MAAAC,UAAA,EAFb;IAAM;EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}