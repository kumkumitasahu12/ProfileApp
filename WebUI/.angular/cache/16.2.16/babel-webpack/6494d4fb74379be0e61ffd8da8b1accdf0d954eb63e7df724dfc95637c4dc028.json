{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@angular/common\";\nfunction LoginComponent_div_8_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\")(1, \"small\");\n    i0.ɵɵtext(2, \"Username is required.\");\n    i0.ɵɵelementEnd()();\n  }\n}\nfunction LoginComponent_div_13_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\")(1, \"small\");\n    i0.ɵɵtext(2, \"Password is required.\");\n    i0.ɵɵelementEnd()();\n  }\n}\nexport class LoginComponent {\n  constructor(fb, router) {\n    this.fb = fb;\n    this.router = router;\n    this.loginForm = this.fb.group({\n      username: ['', Validators.required],\n      password: ['', Validators.required]\n    });\n  }\n  onSubmit() {\n    if (this.loginForm.valid) {\n      console.log('Form Submitted!', this.loginForm.value);\n      const userDetails = {\n        name: 'John Doe',\n        phone: '123-456-7890',\n        email: 'john.doe@example.com',\n        age: 30\n      };\n      // Navigate to profile page and pass user data\n      this.router.navigate(['/profile'], {\n        state: {\n          user: userDetails\n        }\n      });\n    }\n  }\n  static {\n    this.ɵfac = function LoginComponent_Factory(t) {\n      return new (t || LoginComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.Router));\n    };\n  }\n  static {\n    this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: LoginComponent,\n      selectors: [[\"app-login\"]],\n      decls: 16,\n      vars: 4,\n      consts: [[1, \"login-container\"], [3, \"formGroup\", \"ngSubmit\"], [\"for\", \"username\"], [\"id\", \"username\", \"formControlName\", \"username\"], [4, \"ngIf\"], [\"for\", \"password\"], [\"type\", \"password\", \"id\", \"password\", \"formControlName\", \"password\"], [\"type\", \"submit\", 3, \"disabled\"]],\n      template: function LoginComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"div\", 0)(1, \"h2\");\n          i0.ɵɵtext(2, \"Login\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(3, \"form\", 1);\n          i0.ɵɵlistener(\"ngSubmit\", function LoginComponent_Template_form_ngSubmit_3_listener() {\n            return ctx.onSubmit();\n          });\n          i0.ɵɵelementStart(4, \"div\")(5, \"label\", 2);\n          i0.ɵɵtext(6, \"Username:\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(7, \"input\", 3);\n          i0.ɵɵtemplate(8, LoginComponent_div_8_Template, 3, 0, \"div\", 4);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(9, \"div\")(10, \"label\", 5);\n          i0.ɵɵtext(11, \"Password:\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(12, \"input\", 6);\n          i0.ɵɵtemplate(13, LoginComponent_div_13_Template, 3, 0, \"div\", 4);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(14, \"button\", 7);\n          i0.ɵɵtext(15, \"Login\");\n          i0.ɵɵelementEnd()()();\n        }\n        if (rf & 2) {\n          let tmp_1_0;\n          let tmp_2_0;\n          i0.ɵɵadvance(3);\n          i0.ɵɵproperty(\"formGroup\", ctx.loginForm);\n          i0.ɵɵadvance(5);\n          i0.ɵɵproperty(\"ngIf\", ((tmp_1_0 = ctx.loginForm.get(\"username\")) == null ? null : tmp_1_0.invalid) && (((tmp_1_0 = ctx.loginForm.get(\"username\")) == null ? null : tmp_1_0.touched) || ((tmp_1_0 = ctx.loginForm.get(\"username\")) == null ? null : tmp_1_0.dirty)));\n          i0.ɵɵadvance(5);\n          i0.ɵɵproperty(\"ngIf\", ((tmp_2_0 = ctx.loginForm.get(\"password\")) == null ? null : tmp_2_0.invalid) && (((tmp_2_0 = ctx.loginForm.get(\"password\")) == null ? null : tmp_2_0.touched) || ((tmp_2_0 = ctx.loginForm.get(\"password\")) == null ? null : tmp_2_0.dirty)));\n          i0.ɵɵadvance(1);\n          i0.ɵɵproperty(\"disabled\", ctx.loginForm.invalid);\n        }\n      },\n      dependencies: [i3.NgIf, i1.ɵNgNoValidate, i1.DefaultValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.FormGroupDirective, i1.FormControlName],\n      styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n    });\n  }\n}","map":{"version":3,"names":["Validators","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","LoginComponent","constructor","fb","router","loginForm","group","username","required","password","onSubmit","valid","console","log","value","userDetails","name","phone","email","age","navigate","state","user","ɵɵdirectiveInject","i1","FormBuilder","i2","Router","selectors","decls","vars","consts","template","LoginComponent_Template","rf","ctx","ɵɵlistener","LoginComponent_Template_form_ngSubmit_3_listener","ɵɵelement","ɵɵtemplate","LoginComponent_div_8_Template","LoginComponent_div_13_Template","ɵɵadvance","ɵɵproperty","tmp_1_0","get","invalid","touched","dirty","tmp_2_0"],"sources":["C:\\MyProfile\\WebUI\\WebUI\\src\\app\\login\\login.component.ts","C:\\MyProfile\\WebUI\\WebUI\\src\\app\\login\\login.component.html"],"sourcesContent":["import { Component } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { Router } from '@angular/router';\r\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent {\n  loginForm: FormGroup;\n\n  constructor(private fb: FormBuilder, private router: Router) {\n    this.loginForm = this.fb.group({\n      username: ['', Validators.required],\n      password: ['', Validators.required]\n    });\n  }\n\n  onSubmit() {\n    if (this.loginForm.valid) {\n      console.log('Form Submitted!', this.loginForm.value);\n      const userDetails = {\n        name: 'John Doe',\n        phone: '123-456-7890',\n        email: 'john.doe@example.com',\n        age: 30\n      };\n      // Navigate to profile page and pass user data\n      this.router.navigate(['/profile'], { state: { user: userDetails } });\n    }\n  }\n}\n","<div class=\"login-container\">\r\n  <h2>Login</h2>\r\n  <form [formGroup]=\"loginForm\" (ngSubmit)=\"onSubmit()\">\r\n    <div>\r\n      <label for=\"username\">Username:</label>\r\n      <input id=\"username\" formControlName=\"username\" />\r\n      <div *ngIf=\"loginForm.get('username')?.invalid && (loginForm.get('username')?.touched || loginForm.get('username')?.dirty)\">\r\n        <small>Username is required.</small>\r\n      </div>\r\n    </div>\r\n\r\n    <div>\r\n      <label for=\"password\">Password:</label>\r\n      <input type=\"password\" id=\"password\" formControlName=\"password\" />\r\n      <div *ngIf=\"loginForm.get('password')?.invalid && (loginForm.get('password')?.touched || loginForm.get('password')?.dirty)\">\r\n        <small>Password is required.</small>\r\n      </div>\r\n    </div>\r\n\r\n    <button type=\"submit\" [disabled]=\"loginForm.invalid\">Login</button>\r\n  </form>\r\n</div>\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}