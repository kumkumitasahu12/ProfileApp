{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"../_services/file.service\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"@angular/forms\";\nfunction WorkExperienceComponent_li_9_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"li\")(1, \"a\", 7);\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const file_r2 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"href\", file_r2.filePath, i0.ɵɵsanitizeUrl);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(file_r2.fileName);\n  }\n}\nfunction WorkExperienceComponent_li_20_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"li\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const experience_r3 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate2(\" \", experience_r3.jobTitle, \" at \", experience_r3.companyName, \" \");\n  }\n}\nexport class WorkExperienceComponent {\n  constructor(fileService) {\n    this.fileService = fileService;\n    this.selectedFile = null;\n    this.uploadedFiles = [];\n    this.workExperiences = [];\n    this.newExperience = {};\n  }\n  ngOnInit() {\n    this.fetchUploadedFiles();\n  }\n  onFileChange(event) {\n    this.selectedFile = event.target.files[0];\n  }\n  uploadFile() {\n    if (this.selectedFile) {\n      this.fileService.uploadFile(this.selectedFile).subscribe(response => {\n        console.log('File uploaded successfully:', response);\n        this.fetchUploadedFiles();\n      }, error => {\n        console.error('Error uploading file:', error);\n      });\n    } else {\n      console.warn('No file selected for upload.');\n    }\n  }\n  fetchUploadedFiles() {\n    this.fileService.getUploadedFiles().subscribe(data => {\n      this.uploadedFiles = data;\n    }, error => {\n      console.error('Error fetching files:', error);\n    });\n  }\n  addWorkExperience() {\n    if (this.newExperience.jobTitle && this.newExperience.companyName) {\n      this.workExperiences.push({\n        ...this.newExperience\n      });\n      this.newExperience = {};\n    } else {\n      alert('Please fill in job title and company name.');\n    }\n  }\n  static {\n    this.ɵfac = function WorkExperienceComponent_Factory(t) {\n      return new (t || WorkExperienceComponent)(i0.ɵɵdirectiveInject(i1.FileService));\n    };\n  }\n  static {\n    this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: WorkExperienceComponent,\n      selectors: [[\"app-work-experience\"]],\n      decls: 21,\n      vars: 4,\n      consts: [[1, \"file-upload-container\"], [\"type\", \"file\", 3, \"change\"], [3, \"click\"], [4, \"ngFor\", \"ngForOf\"], [1, \"work-experience-container\"], [\"type\", \"text\", \"placeholder\", \"Job Title\", 3, \"ngModel\", \"ngModelChange\"], [\"type\", \"text\", \"placeholder\", \"Company Name\", 3, \"ngModel\", \"ngModelChange\"], [\"target\", \"_blank\", 3, \"href\"]],\n      template: function WorkExperienceComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"div\", 0)(1, \"h2\");\n          i0.ɵɵtext(2, \"Upload File\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(3, \"input\", 1);\n          i0.ɵɵlistener(\"change\", function WorkExperienceComponent_Template_input_change_3_listener($event) {\n            return ctx.onFileChange($event);\n          });\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(4, \"button\", 2);\n          i0.ɵɵlistener(\"click\", function WorkExperienceComponent_Template_button_click_4_listener() {\n            return ctx.uploadFile();\n          });\n          i0.ɵɵtext(5, \"Upload\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(6, \"h2\");\n          i0.ɵɵtext(7, \"Uploaded Files\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(8, \"ul\");\n          i0.ɵɵtemplate(9, WorkExperienceComponent_li_9_Template, 3, 2, \"li\", 3);\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(10, \"div\", 4)(11, \"h2\");\n          i0.ɵɵtext(12, \"Add Work Experience\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(13, \"input\", 5);\n          i0.ɵɵlistener(\"ngModelChange\", function WorkExperienceComponent_Template_input_ngModelChange_13_listener($event) {\n            return ctx.newExperience.jobTitle = $event;\n          });\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(14, \"input\", 6);\n          i0.ɵɵlistener(\"ngModelChange\", function WorkExperienceComponent_Template_input_ngModelChange_14_listener($event) {\n            return ctx.newExperience.companyName = $event;\n          });\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(15, \"button\", 2);\n          i0.ɵɵlistener(\"click\", function WorkExperienceComponent_Template_button_click_15_listener() {\n            return ctx.addWorkExperience();\n          });\n          i0.ɵɵtext(16, \"Add Work Experience\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(17, \"h2\");\n          i0.ɵɵtext(18, \"Work Experience List\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(19, \"ul\");\n          i0.ɵɵtemplate(20, WorkExperienceComponent_li_20_Template, 2, 2, \"li\", 3);\n          i0.ɵɵelementEnd()();\n        }\n        if (rf & 2) {\n          i0.ɵɵadvance(9);\n          i0.ɵɵproperty(\"ngForOf\", ctx.uploadedFiles);\n          i0.ɵɵadvance(4);\n          i0.ɵɵproperty(\"ngModel\", ctx.newExperience.jobTitle);\n          i0.ɵɵadvance(1);\n          i0.ɵɵproperty(\"ngModel\", ctx.newExperience.companyName);\n          i0.ɵɵadvance(6);\n          i0.ɵɵproperty(\"ngForOf\", ctx.workExperiences);\n        }\n      },\n      dependencies: [i2.NgForOf, i3.DefaultValueAccessor, i3.NgControlStatus, i3.NgModel],\n      styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n    });\n  }\n}","map":{"version":3,"names":["i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵadvance","ɵɵproperty","file_r2","filePath","ɵɵsanitizeUrl","ɵɵtextInterpolate","fileName","ɵɵtextInterpolate2","experience_r3","jobTitle","companyName","WorkExperienceComponent","constructor","fileService","selectedFile","uploadedFiles","workExperiences","newExperience","ngOnInit","fetchUploadedFiles","onFileChange","event","target","files","uploadFile","subscribe","response","console","log","error","warn","getUploadedFiles","data","addWorkExperience","push","alert","ɵɵdirectiveInject","i1","FileService","selectors","decls","vars","consts","template","WorkExperienceComponent_Template","rf","ctx","ɵɵlistener","WorkExperienceComponent_Template_input_change_3_listener","$event","WorkExperienceComponent_Template_button_click_4_listener","ɵɵtemplate","WorkExperienceComponent_li_9_Template","WorkExperienceComponent_Template_input_ngModelChange_13_listener","WorkExperienceComponent_Template_input_ngModelChange_14_listener","WorkExperienceComponent_Template_button_click_15_listener","WorkExperienceComponent_li_20_Template"],"sources":["C:\\MyProfile\\WebUI\\WebUI\\src\\app\\work-experience\\work-experience.component.ts","C:\\MyProfile\\WebUI\\WebUI\\src\\app\\work-experience\\work-experience.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\r\nimport { FileService } from '../_services/file.service';\r\n\r\n@Component({\r\n  selector: 'app-work-experience',\r\n  templateUrl: './work-experience.component.html',\r\n  styleUrls: ['./work-experience.component.css']\r\n})\r\nexport class WorkExperienceComponent implements OnInit {\r\n  selectedFile: File | null = null;\r\n  uploadedFiles: any[] = [];\r\n  workExperiences: any[] = [];\r\n  newExperience: any = {};\r\n\r\n  constructor(private fileService: FileService) { }\r\n\r\n  ngOnInit(): void {\r\n    this.fetchUploadedFiles();\r\n  }\r\n\r\n  onFileChange(event: any): void {\r\n    this.selectedFile = event.target.files[0];\r\n  }\r\n\r\n  uploadFile(): void {\r\n    if (this.selectedFile) {\r\n      this.fileService.uploadFile(this.selectedFile).subscribe(\r\n        response => {\r\n          console.log('File uploaded successfully:', response);\r\n          this.fetchUploadedFiles();\r\n        },\r\n        error => {\r\n          console.error('Error uploading file:', error);\r\n        }\r\n      );\r\n    } else {\r\n      console.warn('No file selected for upload.');\r\n    }\r\n  }\r\n\r\n  fetchUploadedFiles(): void {\r\n    this.fileService.getUploadedFiles().subscribe(\r\n      data => {\r\n        this.uploadedFiles = data;\r\n      },\r\n      error => {\r\n        console.error('Error fetching files:', error);\r\n      }\r\n    );\r\n  }\r\n\r\n  addWorkExperience(): void {\r\n    if (this.newExperience.jobTitle && this.newExperience.companyName) {\r\n      this.workExperiences.push({ ...this.newExperience });\r\n      this.newExperience = {}; \r\n    } else {\r\n      alert('Please fill in job title and company name.');\r\n    }\r\n  }\r\n}\r\n","<div class=\"file-upload-container\">\r\n  <h2>Upload File</h2>\r\n  <input type=\"file\" (change)=\"onFileChange($event)\" />\r\n  <button (click)=\"uploadFile()\">Upload</button>\r\n\r\n  <h2>Uploaded Files</h2>\r\n  <ul>\r\n    <li *ngFor=\"let file of uploadedFiles\">\r\n      <a [href]=\"file.filePath\" target=\"_blank\">{{ file.fileName }}</a>\r\n    </li>\r\n  </ul>\r\n</div>\r\n\r\n<div class=\"work-experience-container\">\r\n  <h2>Add Work Experience</h2>\r\n  <input type=\"text\" placeholder=\"Job Title\" [(ngModel)]=\"newExperience.jobTitle\" />\r\n  <input type=\"text\" placeholder=\"Company Name\" [(ngModel)]=\"newExperience.companyName\" />\r\n  <button (click)=\"addWorkExperience()\">Add Work Experience</button>\r\n\r\n  <h2>Work Experience List</h2>\r\n  <ul>\r\n    <li *ngFor=\"let experience of workExperiences\">\r\n      {{ experience.jobTitle }} at {{ experience.companyName }}\r\n    </li>\r\n  </ul>\r\n</div>\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}